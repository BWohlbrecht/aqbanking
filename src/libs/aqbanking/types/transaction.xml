
<typedefs>
  <type id="AB_VALUE" >
    <functions>
      <function type="todb" name="AB_Value_toDb" />
      <function type="fromdb" name="AB_Value_fromDb" />
      <function type="dup" name="AB_Value_dup" />
      <function type="free" name="AB_Value_free" />
    </functions>
  </type>
  
  <type id="GWEN_STRINGLIST" >
    <functions>
      <function type="dup" name="GWEN_StringList_dup" />
      <function type="free" name="GWEN_StringList_free" />
    </functions>
  </type>

  <type id="GWEN_TIME" >
    <functions>
      <function type="todb" name="GWEN_Time_toDb" />
      <function type="fromdb" name="GWEN_Time_fromDb" />
      <function type="dup" name="GWEN_Time_dup" />
      <function type="free" name="GWEN_Time_free" />
    </functions>
  </type>

  <type id="AB_SPLIT_LIST" prefix="AB_Split_List" >
    <functions>
      <function type="new" name="AB_Split_List_new" />
      <function type="dup" name="AB_Split_List_dup" />
      <function type="free" name="AB_Split_List_free" />
    </functions>
  </type>
  
  <type id="GWEN_TYPE_UINT32" dbtype="int" />
  
</typedefs>



<types>

  <type id="AB_SPLIT" 
        prefix="AB_Split" 
        class="Split"
        access="public"
        filename="split"
        inherit="public" 
        list="public"
        list2="public" >
    <descr>
      This type contains all important information about transaction splits.
      Please note that all text fields are in UTF-8.
    </descr>
    <headers>
      <header type="sys" >gwenhywfar/types.h</header>
      <header type="sys" >gwenhywfar/gwentime.h</header>
      <header type="sys" >gwenhywfar/stringlist.h</header>
      <header type="sys" >aqbanking/value.h</header>
    </headers>
    
    <group name="Account Info">
      <descr>
        This group contains information about the remote account.
      </descr>
      <elem name="country" type="char" ptr="1">
        <descr>
          This is the two-character ISO country code (as used in toplevel
          domains). For Germany use "DE".
        </descr>
      </elem>
      <elem name="bankCode" type="char" ptr="1" />
      <elem name="branchId" type="char" ptr="1">
        <descr>
         This is the branch id of the remote bank (OFX only)
        </descr>
      </elem>
      <elem name="accountNumber" type="char" ptr="1" />
      <elem name="suffix" type="char" ptr="1" />
      <elem name="name" type="GWEN_STRINGLIST" ptr="1" />
    </group>
    
    <group name="Value">
      <elem name="value" type="AB_VALUE" ptr="1" />
    </group>

    <elem name="purpose" type="GWEN_STRINGLIST" ptr="1" >
      <descr>
        <p>
          This string list contains the purpose of the split.
          Every entry of this list represents a single purpose line.
        </p>
      </descr>
    </elem>

  </type>


  <type id="AB_TRANSACTION" 
        prefix="AB_Transaction" 
        class="Transaction"
        access="public"
        filename="transaction"
        inherit="public" 
        list="lib"
        list2="public" >
    <descr>
      This type contains all important information about transactions.
      All text fields are in UTF-8.
      Please note: Since version 0.9.9.1 of AqBanking a transaction may 
      contain splits. 
      If an AB_TRANSACTION actually does contain splits then some variables
      (like <i>localCountry</i>) are stored within the AB_SPLITs rather than 
      in AB_TRANSACTION.
      So your application should first check for splits and read the 
      information (marked as <i>in AB_SPLIT</i> below) from them.
    </descr>
    <headers>
      <header type="sys" >gwenhywfar/types.h</header>
      <header type="sys" >gwenhywfar/gwentime.h</header>
      <header type="sys" >gwenhywfar/stringlist.h</header>
      <header type="sys" >aqbanking/value.h</header>
      <header type="sys" >aqbanking/split.h</header>
    </headers>

    <group name="Local Account Info">
      <descr>
        This group contains information about the local account.
        Functions of this group are also available in AB_SPLIT, please 
        make your application check for splits first and use the values here
        as a fallback.
      </descr>
      <elem name="localCountry" type="char" ptr="1">
        <descr>
          This is the two-character country code according to ISO
          3166-1 (Alpha-2). This is also used in DNS toplevel domain
          names. For Germany use "DE" (not case-sensitive).
        </descr>
      </elem>

      <elem name="localBankCode" type="char" ptr="1">
        <descr>
         This is the code of the local bank (i.e. <b>your</b> bank).
        </descr>
      </elem>
      <elem name="localBranchId" type="char" ptr="1">
        <descr>
         This is the branch id of the local bank (OFX only)
        </descr>
      </elem>
      <elem name="localAccountNumber" type="char" ptr="1" />
      <elem name="localSuffix" type="char" ptr="1" >
        <descr>
          If your account has subaccounts which are distinguished by
          different suffixes, then this is that suffix. Otherwise it's
          empty. (HBCI only)
        </descr>
      </elem>
      <elem name="localName" type="char" ptr="1" />
    </group>

    <group name="Remote Account Info">
      <descr>
        This group contains information about the remote account.
        Functions of this group are also available in AB_SPLIT, please 
        make your application check for splits first and use the values here
        as a fallback.
      </descr>
      <elem name="remoteCountry" type="char" ptr="1">
        <descr>
          This is the two-character ISO country code (as used in toplevel
          domains). For Germany use "DE".
        </descr>
      </elem>
      <elem name="remoteBankName" type="char" ptr="1" />
      <elem name="remoteBankLocation" type="char" ptr="1" />
      <elem name="remoteBankCode" type="char" ptr="1" />
      <elem name="remoteBranchId" type="char" ptr="1">
        <descr>
         This is the branch id of the remote bank (OFX only)
        </descr>
      </elem>
      <elem name="remoteAccountNumber" type="char" ptr="1" />
      <elem name="remoteSuffix" type="char" ptr="1" />
      <elem name="remoteIban" type="char" ptr="1">
        <descr>
          International Bank Account Number according to ECBS EBS 204.
          <table>
            <tr><th>Pos</th><th>Meaning</th></tr>
            <tr><td>0-1</td><td>Country code according to ISO 3166</td></tr>
            <tr><td>2-3</td><td>Checksum</td></tr>
            <tr><td>4-33</td><td>Country specific account info</td></tr>
          </table>
          Examples:
          <ul>
            <li>BE62510007547061</li>
            <li>FR1420041010050500013M02606</li>
          </ul>
        </descr>
      </elem>
      <elem name="remoteName" type="GWEN_STRINGLIST" ptr="1" />
    </group>
    
    <elem name="uniqueId" type="GWEN_TYPE_UINT32" >
      <descr>
        This is a unique id assigned by the application. However, when
        adding a transaction to a job (like JobTransfer) this id is
        assigned by AqBanking to make sure that this id is unique across
        all applications.
      </descr>
    </elem>

    <group name="Dates">
      <elem name="valutaDate" type="GWEN_TIME" ptr="1" >
        <descr>
          The date when the transaction was really executed
          (Datum Valuta/Wertstellung)
        </descr>
      </elem>
      <elem name="date" type="GWEN_TIME" ptr="1" >
        <descr>
          The date when the transaction was booked (but sometimes it is
          unused). (Buchungsdatum)
        </descr>
      </elem>
    </group>

    <group name="Value">
      <descr>
        Functions of this group are also available in AB_SPLIT, please 
        make your application check for splits first and use the values here
        as a fallback.
      </descr>
      <elem name="value" type="AB_VALUE" ptr="1" />
    </group>

    <elem name="splits" type="AB_SPLIT_LIST" ptr="1" mode="list"
          elemType="AB_SPLIT" const="0" init="1" copy="1" />

    <group name="Info Which Is Not Supported by All Backends">
      <descr>
        <p>
         This group contains information which differ between backends.
        </p>
        <p>
         Some of this information might not even be <b>supported</b> by every
         backends.
        </p>
      </descr>
      <elem name="textKey" type="int" >
        <descr>
          <p>
            A 3 digit numerical transaction code, defined for all kinds of
            different actions. (Textschluessel)
          </p>
          <p>
            For a normal transfer you should set it to 51. For debit notes
            the values 04 or 05 may be used. For other values please refer to
            your credit institute. (HBCI only)
          </p>
        </descr>
      </elem>
      <elem name="transactionKey" type="char" ptr="1">
        <descr>
          this is the transaction id that tells you more about the type
          of transaction (3 character code) (Buchungsschluessel)
          (HBCI only)
        </descr>
      </elem>
      <elem name="customerReference" type="char" ptr="1" >
        <descr>
          Reference string, if the customer (you) has specified
          one. (E.g. the cheque number.) Otherwise "NONREF" or empty
          (Kundenreferenz)
        </descr>
      </elem>
      <elem name="bankReference" type="char" ptr="1" >
        <descr>
          Reference string for this transaction given by the bank, if it
          has given one. Otherwise empty. (Bankreferenz)
        </descr>
      </elem>
      <elem name="transactionCode" type="int" >
        <descr>
          A 3 digit numerical transaction code, defined for all kinds of
          different actions. (Geschaeftsvorfallcode)
        </descr>
      </elem>
      <elem name="transactionText" type="char" ptr="1" >
        <descr>
          Transaction text (e.g. STANDING ORDER) (Buchungstext)
        </descr>
      </elem>

      <elem name="primanota" type="char" ptr="1" />
      <elem name="fiId" type="char" ptr="1" >
        <descr>
          <p>
            This is an id optionally assigned by the Financial 
            Institute. It is mostly used by OFX.
          </p>
        </descr>
      </elem>
      
      <elem name="purpose" type="GWEN_STRINGLIST" ptr="1" >
        <descr>
          <p>
            This string list contains the purpose of the transaction.
            Every entry of this list represents a single purpose line.
          </p>
        </descr>
      </elem>
      
      <elem name="category" type="GWEN_STRINGLIST" ptr="1" >
        <descr>
          <p>
            This string list contains the categories this transaction
            belongs to. This element is not used by AqBanking itself but
            some im/exporter plugins may choose to use these.
          </p>
        </descr>
      </elem>
      
    </group>
  </type>
  
  
  
</types>
