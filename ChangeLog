
2004/11/22: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added AB_BankInfoService (will extend the bank info code to include server
  settings for HBCI,  OFX, WebConnect etc)
  This needs the latest GWEN CVS version.
- extended API: Now AB_BANKINFO objects can be queried using templates.
  This allows to use any of the fields of a AB_BANKINFO object (except the
  service lists) for matching.
- bankinfo/de: now not only uses KtoBlzCheck, additionally uses the FinTS
  banklist file. This file also contains information about the HBCI version
  and servers.


2004/11/19: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added export-function to im/exporter
- started working on CSV exporter (needs latest Gwenhywfar CVS!)
- added new vars to im/exporter profiles: "import" and "export". These vars
  tell the application whether the profile can be used for import and/or
  export.


2004/11/18: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- parsers/swift/swift.c: 
  - fixed two bugs (spotted by Herbert.hbci@gmx.de, modified his patches):
    - removes artificial CR/LFs in :86: fields
    - now parses the last line of a SWIFT document
  - fixed loglevel (SWIFT log infos are no longer shown in red)
  - improved handling of umlauts in SWIFT documents (actually, SWIFT does not
    allow umlauts or any other special characters for that matter. However,
    banks send those character anyway, so we have to deal with them...
    This fix also handles English and French chars).


2004/11/05: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- fixed a bug spotted by Herbert Ellebruch


===========================================================================
MARK: released AqBanking - 0.9.7 (2004/11/02)
===========================================================================


2004-10-30  Christian Stimming  <stimming@tuhh.de>

	* aqbanking.spec.in: Added spec file for rpm creation.


2004/10/08: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added some user error codes


2004-10-03  Christian Stimming  <stimming@tuhh.de>

	* src/libs/aqbanking/banking.h: Added
	AB_Banking_SetPinCacheEnabled function to allow the application to
	choose between per-session-caching (default) and
	only-per-queue-execution caching. Note: Need to increment
	SO_REVISION and SO_AGE because of that.


2004/09/27: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- jobGetTransactions: fromDate and toDate are now const arguments


===========================================================================
MARK: released AqBanking - 0.9.6 (2004/09/26)
===========================================================================


2004-09-25  Christian Stimming  <stimming@tuhh.de>

	* src/libs/aqbanking/types/value.c: When changing the locale,
	immediately copy the previous locale to a new buffer. Otherwise
	often enough the returned string which was static storage was no
	longer valid.

	* src/libs/aqbanking/banking.c: In any DelJob method, first check
	whether the name strings are non-NULL. Fixes crash when aborting
	the PIN dialog and still calling DelPendingJob afterwards.


2004/09/24: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- fixed a stupid bug in the code that reads a unique id


2004-09-24   Christian Stimming <stimming@tuhh.de>

	* src/libs/aqbanking/banking.c: Make the directory separator a
	macro so that correct paths are used on windows.

	* configure.ac: Introduce new AC_SUBST variable
	aqbanking_internal_libs that has the linker command without the
	lib directory.


2004/09/22: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added a GWEN_BufferedIO_Flush() to AB_Banking_GetUniqueId()
- AB_Banking__OpenFile: if error upon fcntl is ENOLCK it will be ignored.
  This is because locking is not supported on NFS files systems.


===========================================================================
MARK: released AqBanking - 0.9.5 (2004/09/19)
===========================================================================


2004/09/19: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- OFX importer: now stores check number and some other additional OFX fields
- parsers: now all parsers create UTF-8 data (surprisingly banks send SWIFT
  data which contains German umlauts)


2004/09/18: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- changed type of uniqueId in AB_Transaction
- added element FiId to transaction
- dropped country codes from transactions
- added elements localBranchId and remoteBranchId (for OFX)
- transactions handed over to JobGetTransaction get assigned a unique transfer
  id


2004/09/17: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added function AB_Banking_EnqueuePendingJobs()


2004/09/15: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added a note about the encodings used (UTF-8)
- consequent usage of UTF-8 in importer/exporter and parser plugins
- fixed a bug in SWIFT importer
- added error code AB_ERROR_ABORTED


===========================================================================
MARK: released AqBanking - 0.9.4 (2004/09/15)
===========================================================================


2004/09/15: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- clarified documentation for the virtual user interaction functions regarding
  the code set to be used (and how to use HTML in the text)


2004/09/14: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- fixed a bug (was falsely reporting a backend as active when in fact
  it wasn't)
- added OFX importer
- improved safety of unique id (it is now read from a file and written back 
  direclty after increment)
- the user data dir (normally $HOME/.banking) can now be set in the
  configuration file (but you should not that. Anyway, for very special 
  occasions - and I currently can't think of any - this might be usefull).
  This function has been added reluctantly on request.


2004/09/13: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- ImExporter API: added function to make an importer plugin check whether
  it supports a given file as data source
- replaced im/exporter DBIO by DTAUS and SWIFT


2004-09-10   Christian Stimming <stimming@tuhh.de>

	* configure.ac: Add ACX_WINDOWS_PATHS. Add dll rules all over the
	place.


===========================================================================
MARK: released AqBanking - 0.9.3 (2004/09/10)
===========================================================================


2004/09/09: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- banking: added functions which make it easier to retrieve the PIN or
  TAN for a given medium. These functions - if not overloaded - just
  use AB_Banking_InputBox() to get the pin/tan.
  These functions also keep track of the status of a pin. So if the
  backend requesting a pin plays along the built-in pin manager is able
  to take care of the pin status (e.g. refusing to return a PIN which is
  already known as being "bad"). This will facilitate building non-interactive
  programs.
  The PIN will be stored internally and returned for all following calls
  to the PIN getter function until the program is terminated. The PIN is
  not stored in a file. However, if the PIN has been marked as "bad" then
  an entry in the config-file is made. This entry consist of a name derived
  from the token and the value of the pin (concatenated and RMD160-hashed)
  and the status (only "bad" pins are saved since even if decoded they would
  be useless).
- changed the path for application and backend data in jobs (so that both
  types cannot interfere with each other)
- added support for account/bank checkers: the first country for which such
  a checker is available is "de" (Germany) using KtoBlzCheck.


2004/09/07: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- improved saving of backend data upon AB_Banking_Fini()
- added plugins for DTAUS and SWIFT (taken from AqHBCI)
- added AB_Banking_Save() on Christian's account


2004/09/03: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added missing checks to configure.ac (setlocale, locale.h)


2004-09-03   Christian Stimming <stimming@tuhh.de>

	* src/libs/aqbanking/types/transaction.c: include config.h was
	missing, so update the generated code to the current typemaker's
	output.


===========================================================================
MARK: released AqBanking - 0.9.2 (2004/09/02)
===========================================================================


2004/09/02: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- prepared next release (revised API, additional high level API, bugfixes etc)
- AqBanking now works with KMyMoney


2004/08/30: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added conveniance functions to importer/exporter


2004/08/29: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- Valgrind-Session: fixed some memory leaks
- added application level API which should make it easier to add support for
  AqBanking to existing applications


2004/08/27: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added some lines to README


2004/08/26: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added two new queues: "deferred" and "archived".
  Jobs deleted from the "finished" queue are now stored in the "archived"
  directory.
  Jobs which have already been enqueued but not executed can now be
  deferred thus allowing to hold back some jobs without needing to remove
  them completely. You can later re-enqueue those jobs.


2004/08/25: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- changed the way AqBanking saves application/backend data, better data
  separation (as needed when temporarily shutting down a backend while
  setting it up with a wizard)
  -> previous configuration data gets lost with this change !!


2004/08/24: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- simplified importer/exporter framework: now an importer does no longer
  have to sort imported transactions by days. This must now be done inside
  an application, because sometimes this needs user interaction which is out
  of the scope of AqBanking
- fixed some bugs (e.g. was not using the data folder set bei ./configure)


2004/08/23: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added a generic import/export framework. This can be used to import
  any kind of financial file formats into AqBanking suitable data (like
  AB_TRANSACTION, AB_ACCOUNT etc).
- added AB_Banking_GetImExporterProfiles(). This function loads all profiles
  for an importer/exporter.


2004/08/22: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- AB_JOB: added functions which allow applications and backends to store
  specific data to a GWEN_DB within a job
- application names are now internally escaped to avoid security risks (since
  the application name is used to create file paths)
- application specific banking data is now stored in one file per application.
  This removes the need of loading the data for all applications on startup.
  Now only the data of the running application is loaded (in the long run
  this should keep the startup time short)
- boosted version to 0.9, since about 90 percent of the planned features
  are implemented
- provider names are now also escaped
- removed the import-transactions function from provider, this will be later
  added to a new function class which handled importing and exporting of
  AqBanking data


2004/08/21: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added currency to AB_ACCOUNT
- added functions to transaction which allows to clear purpose and remote
  name lists
- removed API-inconsistencies: since all *_fromSomething" functions basically
  are constructors they start with a lowercase letter after the prefixes
  (like in AB_Value_fromString() as in AB_Value_new()).


2004-08-21  Christian Stimming  <stimming@tuhh.de>

	* src/libs/aqbanking/banking.h: Add AB_Banking_GetUserData and
	AB_Banking_SetUserData to pass data to the callbacks.


2004/08/20: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- created new LogDomain "aqbanking" (needs current Gwen CVS, though)


2004/08/19: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- changed the constructors for the getTransactions job
- added JOBSingleTransfer (performs a single transfer as you might have 
  guessed ;-)


2004/08/18: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- banking.c: 
  - changed loading of job queues. They are now stored one file per job in 
    special folders:
    - "todo"    : enqueued jobs
    - "finished": finished jobs (moved to there from "todo")
    - "pending" : pending jobs (moved to there from "todo")


2004/08/15: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- created new header files for backend development (contain prototypes
  for functions which are only to be used by the library itself and
  backends. Might be published in special RPMs especially dedicated to
  backend development).
- added AB_Transaction_fromDb() and AB_Transaction_toDb()
- AB_Banking_GetProvider: initialize the provider after loading it


2004/08/14: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- added AB_Transaction_dup()
- added functions which allow the library to completely load jobs from
  a db (improves the previous job loading features)
- started implementing JOBGetTransactions


===========================================================================
MARK: released aqbanking-0.1.2alpha (2004/08/13)
===========================================================================


2004-08-13   Christian Stimming <stimming@tuhh.de>

	* src/libs/aqbanking++/aqbankingpp.vcproj: Add project file for
	compiling aqbanking++ with Microsoft Visual Studio C++ (MSVC)
	compiler.


2004/08/12: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- aqbanking:
  - removed AB_ProviderWizard. A Wizard is now a stand-alone executable so 
    there is no need for dynamically loading a module
  - banking: 
    - added functions which allow to temporarily suspend backends. This
      is needed while a setup wizard is executed
    - made some functions private to AqBanking
    - added AB_Banking_GetWizardPath() which returns the folder where 
      executable wizards for a given backend are located
  - provider: added functions to init and deinit backends
- aqbanking++: removed provider files, because the ProviderWizard no longer
  exists



===========================================================================
MARK: released aqbanking-0.1.1alpha (2004/08/11)
===========================================================================



2004-08-10   Christian Stimming <stimming@tuhh.de>

	* src/libs/aqbanking/*.h: Add AQBANKING_API to all function
	declarations.
	
	* src/libs/aqbanking/error.h: Add declaration of
	__declspec(dllimport/export) macro AQBANKING_API, depending on
	BUILDING_AQBANKING_DLL.


2004/08/09: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- declared UI methods in AB::Banking public
- added a flags parameter to AB_Banking_ShowBox()
- adapted to latest changes in Gwen


2004/08/06: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- aqbanking++: added class for ProviderWizards
- fixed some bugs
- launching a wizard now works !!! ;-)
  I will have to concentrate now on the kde_wizard for AqHBCI to allow people
  to later move over to AqHBCI/AqBanking ;-)


2004-08-02   Christian Stimming <stimming@tuhh.de>

	* many headers: Remove trailing semicolon from macro calls as
	required by ISO C89.

	
2004/08/05: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- fixed some bugs, added some functions to AB_JOB


2004/08/04: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- completed API documentation for AB_BANKING
- fixed AB_Transaction (was missing textkey)


2004/08/03: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- banking/banking.{c,h}: AB_Banking_MessageBox: Just figured out that for 
    non-interactive frontends there is more information to be supplied. 
    I also reordered the arguments so that they look like those of 
    AB_Banking_InputBox.


2004-08-02   Christian Stimming <stimming@tuhh.de>

	* src/libs/aqbanking/Makefile.am,
	src/libs/aqbanking/ressource.rc.in, configure.ac: Add build rules
	for windows DLL, copied from gwenhywfar.


2004/08/02: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- very much improved generation of API doc. In combination with the
  changes in my other projects the new target "install-srcdoc" now
  creates combined API docs (e.g. API doc for AqBanking now links to
  that of Gwenhywfar etc)
- now uses gwen's new tool mklistdoc to generate list documentation suitable
  for doxygen. Needs the latest CVS version of Gwen.


2004/08/01: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- adapted to latest changes in AqHBCI and Gwen.
- fixed some bugs


2004/07/31: Martin Preuss<martin@libchipcard.de>
-------------------------------------------------
- improved configure.ac
- added c++ binding
- cleaned up the code, moved some functions to private headers
- started with APIDOC

